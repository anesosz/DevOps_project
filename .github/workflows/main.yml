name: CI devops 2024

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test-backend: 
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test with Maven
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=anesosz_Tp_DevOps_Docker -Dsonar.organization=anesosz -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} --file ./pom.xml
        working-directory: ./backend/simple-api-student-main

  build-and-push-docker-image:
    needs: test-backend
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./backend/simple-api-student-main
          tags: ${{ secrets.DOCKERHUB_USERNAME}}/tp-devops-backend:latest
          push: ${{ github.ref == 'refs/heads/master' }}

      - name: Build and push database Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/master' }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-frontend:latest 
          push: ${{ github.ref == 'refs/heads/master' }}

  deploy:
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-push-docker-image.result == 'success' }}
    
    needs: build-and-push-docker-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH and known hosts
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Disable host key checking
        run: echo "ANSIBLE_HOST_KEY_CHECKING=False" >> $GITHUB_ENV

      - name: Deploy to production server
        run: |
          ansible-playbook -i ansible/inventories/setup.yml ansible/playbook-app.yml
          
